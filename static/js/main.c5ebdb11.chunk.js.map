{"version":3,"sources":["components/Board.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Board","_ref","start","setStart","_useState","useState","_useState2","_slicedToArray","turn","setTurn","_useState3","Array","fill","_useState4","isEmpty","setIsEmpty","handleClick","e","newArray","_toConsumableArray","index","Number","target","id","innerHTML","prevTurn","console","log","checkWinner","winningConditions","i","length","_winningConditions$i","a","b","c","gameEnding","concat","every","value","boxes","document","querySelectorAll","setTimeout","forEach","ele","React","createElement","Fragment","className","map","key","onClick","Main","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c5ebdb11.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport '../styles/game.css';\r\n\r\nconst Board=({start,setStart})=>{\r\n\r\n    const [turn,setTurn]=useState('X');\r\n\r\n    const [isEmpty , setIsEmpty]=useState(Array(9).fill(''));\r\n    // console.log(turn)\r\n    // console.log(\"this is the state:\"+isEmpty[0])\r\n    const handleClick=(e)=>{\r\n        if(!start){\r\n            const newArray=[...isEmpty]\r\n            const index=(Number)(e.target.id)\r\n            // console.log((Number)(e.target.id))\r\n            if(isEmpty[e.target.id] === ''){\r\n                if(turn==='X'){\r\n                    newArray[index]='X';\r\n                    e.target.innerHTML=newArray[index];\r\n                    setTurn(prevTurn=>prevTurn='O')\r\n                }else if(turn==='O'){\r\n                    newArray[index]='O';\r\n                    e.target.innerHTML=newArray[index];\r\n                    setTurn(prevTurn=>prevTurn='X')\r\n                }\r\n                setIsEmpty(newArray);\r\n                console.log(newArray)\r\n                checkWinner()\r\n            }else{\r\n            console.log(\"This box is already in use\")\r\n            }\r\n        }\r\n    }\r\n\r\n    const checkWinner=()=>{\r\n        let winningConditions=[\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6]\r\n        ];\r\n        for (let i = 0; i < winningConditions.length; i++) {\r\n            const [a, b, c] = winningConditions[i];\r\n            if (\r\n                isEmpty[a] !== '' &&\r\n                isEmpty[a] === isEmpty[b] &&\r\n                isEmpty[a] === isEmpty[c]\r\n            ) {\r\n            //   console.log('winner');\r\n                gameEnding();\r\n                return `${isEmpty[a]} is the winner`;\r\n            }\r\n        }\r\n        if(isEmpty.every(value=>value !== '')){\r\n            gameEnding()\r\n            return \"Draw\"\r\n        }\r\n    }\r\n\r\n    const gameEnding=()=>{\r\n        const boxes=document.querySelectorAll('.box')\r\n        setTimeout(()=>{\r\n            setStart(true)\r\n            boxes.forEach(ele=>{\r\n                ele.innerHTML='';\r\n            })\r\n            setIsEmpty(Array(9).fill(''))\r\n        },1000)\r\n    }\r\n\r\n    return(\r\n        <>        \r\n            <div className='monitor'>\r\n                {(start ? 'Tic Tac Toe' :(checkWinner() ? checkWinner() : `${turn} Turn`)) }\r\n            </div>\r\n            <div className='board'>\r\n        { isEmpty.map((value, index) => (\r\n          <div\r\n            key={index}\r\n            id={index}\r\n            className='box'\r\n            onClick={handleClick}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Board;","import React,{useState} from 'react';\r\nimport '../styles/main.css';\r\nimport Board from './Board';\r\n\r\nconst Main=()=>{\r\n\r\n    const [start, setStart] = useState(true);\r\n\r\n    const handleStart=()=>{\r\n        setStart( false )\r\n        console.log(start)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='main'>\r\n                <Board start={start} setStart={setStart}/>\r\n                <div>\r\n                {start &&(<button onClick={handleStart} className='btn'>Start</button>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}